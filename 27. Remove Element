ver1:

class Solution {
public:
    int removeElement(vector<int>& nums, int val) {
	if (nums.empty()) return 0;

	sort(nums.begin(), nums.end());
	vector<int>::iterator it = nums.begin();
	while (it!=nums.end()&&*it != val)it++;
	while (it!=nums.end()&&*it == val)
		nums.erase(it, it + 1);
	return nums.size();
}
};

ver2:

class Solution {
public:
    int removeElement(vector<int>& nums, int val) {
	if (nums.empty()) return 0;

	sort(nums.begin(), nums.end());
	vector<int>::iterator it = nums.begin(),it2=nums.begin();
	while (it!=nums.end()&&*it != val){
        it++;
        it2++;
    }
	while(it2!=nums.end()&&*it2==val)it2++;
    nums.erase(it,it2);
	return nums.size();
}
};

3. ver3

class Solution {
public:
    int removeElement(vector<int>& nums, int val) {
	int n=0;
    for(int i=0;i<nums.size();++i)
        if(nums[i]!=val)
            nums[n++]=nums[i];
    return n;
}
};

Comment:
1. Inspecting the requirements, the size of the array doesn't have to shrink after removal? 
2. Not clear enough? 
